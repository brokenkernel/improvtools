<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:dist="http://schemas.android.com/apk/distribution"
    android:targetSandboxVersion="2"
    android:installLocation="auto">

    <dist:module dist:instant="true">
        <dist:delivery>
            <dist:install-time />
        </dist:delivery>
    </dist:module>

    <uses-feature
        android:name="android.hardware.faketouch"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.gamepad"
        android:required="false" />

    <uses-permission
        android:name="android.permission.VIBRATE"
        android:required="false" />

    <uses-permission
        android:name="android.permission.POST_NOTIFICATIONS"
        android:required="false" />

    <!-- work runtime wants to use this. We don't -->
<!--    <uses-permission-->
<!--        android:name="android.permission.WAKE_LOCK"-->
<!--        tools:node="remove" />-->

    <!-- Firebase adds this. We don't use it -->
    <uses-permission
        android:name="com.google.android.gms.permission.AD_ID"
        tools:node="remove" />
    <uses-permission
        android:name="com.google.android.gms.permission.ACCESS_ADSERVICES_AD_ID"
        tools:node="remove" />
    <uses-permission
        android:name="com.google.android.gms.permission.ACCESS_ADSERVICES_ATTRIBUTION"
        tools:node="remove" />
    <queries>
        <intent>
            <action android:name="android.support.customtabs.action.CustomTabsService" />
        </intent>
    </queries>

    <!-- TODO: SDK 36 android:intentMatchingFlags="enforceIntentFilter -->
    <application
        android:name=".ImprovToolsApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:description="@string/app_description"

        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.ImprovTools"
        android:gwpAsanMode="always"
        android:enableOnBackInvokedCallback="true"
        android:networkSecurityConfig="@xml/network_security_config"
        android:hardwareAccelerated="true"
        tools:targetApi="33">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:theme="@style/Theme.ImprovTools"
            android:directBootAware="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <action android:name="android.intent.action.APPLICATION_PREFERENCES" />

                <category android:name="android.intent.category.LAUNCHER" />
                <category android:name="android.intent.action.NOTIFICATION_PREFERENCES" />
            </intent-filter>
            <meta-data
                android:name="android.app.shortcuts"
                android:resource="@xml/shortcuts" />
        </activity>

        <activity-alias
            android:name="ViewPermissionUsageActivity"
            android:exported="true"
            android:targetActivity=".MainActivity"
            android:permission="android.permission.START_VIEW_PERMISSION_USAGE">
            <intent-filter>
                <action android:name="android.intent.action.VIEW_PERMISSION_USAGE" />
                <action android:name="android.intent.action.VIEW_PERMISSION_USAGE_FOR_PERIOD" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity-alias>

        <!-- this might actually need multi-process datastore holder, but I think it should be easy and straightforward -->
        <property
            android:name="android.window.PROPERTY_SUPPORTS_MULTI_INSTANCE_SYSTEM_UI"
            android:value="true" />

        <profileable
            android:shell="true"
            tools:targetApi="29" />

        <meta-data
            android:name="firebase_analytics_collection_enabled"
            android:value="false" />
        <meta-data
            android:name="firebase_performance_logcat_enabled"
            android:value="true" />
        <meta-data
            android:name="google_analytics_default_allow_analytics_storage"
            android:value="true" />
        <meta-data
            android:name="google_analytics_default_allow_ad_storage"
            android:value="false" />
        <meta-data
            android:name="google_analytics_default_allow_ad_user_data"
            android:value="false" />
        <meta-data
            android:name="google_analytics_default_allow_ad_personalization_signals"
            android:value="false" />
        <meta-data android:name="google_analytics_adid_collection_enabled"
            android:value="false" />
    </application>

</manifest>
