# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

default_platform(:android)

GRADLE_FILE = "app/build.gradle.kts"

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Build debug and test APK for screenshots"
  lane :build_for_screengrab do
    build_android_app(
      task: 'assemble',
      build_type: 'Debug',
    )
    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest',
    )
  end

  desc "Bump Version In Gradle File"
  lane :increment_gradle_version do
    ensure_git_branch(branch: 'master')
    increment_version_code(
          gradle_file_path: GRADLE_FILE,
    )
    current_build_number = android_get_version_code(
      gradle_file: GRADLE_FILE,
    )

    git_commit(
      path: "app/build.gradle.kts",
      message: "[fastlane] bump version code to " + current_build_number
    )
    add_git_tag(
      grouping: "fastlane-builds",
      includes_lane: true,
      prefix: "v",
      build_number: current_build_number
    )
    push_to_git_remote(
      tags: true,
    )

    current_build_number # last line, return value
  end

  desc "Take Screenshots"
  lane :improv_tools_screenshots do
    build_for_screengrab
    capture_android_screenshots(
      clear_previous_screenshots: true,
      skip_open_summary: true,
      use_tests_in_packages: "com.brokenkernel.improvtools.deployment.screenshots",
      exit_on_test_failure: true,
      test_instrumentation_runner: "com.brokenkernel.improvtools.infrastructure.ImprovToolsTestRunner",
    )
  end

  desc "Create Native Debug Symbols"
  lane :create_native_debug_symbols do
    zip(
      path: "./app/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/lib/",
      include: [ "arm64-v8a/*.so", "armeabi-v7a/*.so", "x86_64/*.so", ],
      output_path: "app/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/native_debug_symbols.zip",
      verbose: true,
    )

  end


  desc "Play Store Deployment Preperation"
  lane :playstore_prep do
      git_pull(
        only_tags: true,
        rebase: true,
      ) # only the tags, no commits
      ensure_git_status_clean
      current_build_number = increment_gradle_version
      build_android_app(
        task: 'assemble',
        build_type: 'Release',
      )

      build_android_app(
        task: 'bundle',
        build_type: 'Release',
      )
#       changelog = changelog_from_git_commits(
#           commits_count: number_of_commits,
#           pretty: "- %s",
#           date_format: "long",
#           match_lightweight_tag: false,
#           merge_commit_filtering: "exclude_merges"
#       )
      improv_tools_screenshots
      create_native_debug_symbols
      current_build_number # last line, return value
  end


  desc "Play Store Deployment Preperation"
  lane :playstore_validate_only do
    current_build_number = playstore_prep
    upload_to_play_store(
      aab: "app/build/outputs/bundle/release/app-release.aab",
      skip_upload_apk: true,
      validate_only: true,
      version_code: current_build_number,
      mapping_paths: [
        "app/build/outputs/mapping/release/mapping.txt",
        # "app/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/native_debug_symbols.zip",
      ],
    )
  end

  desc "Full Play Store Deployment"
  lane :playstore_internal_deployment do
    current_build_number = playstore_prep
    upload_to_play_store(
      aab: "app/build/outputs/bundle/release/app-release.aab",
      skip_upload_apk: true,
      version_code: current_build_number,
      track: "internal",
      mapping_paths: [
        "app/build/outputs/mapping/release/mapping.txt",
        # "app/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/native_debug_symbols.zip",
      ],
    )
  end


  desc "Full Play Store Deployment"
  lane :playstore_fully_deployment do
    current_build_number = playstore_prep

    upload_to_play_store(
      aab: "app/build/outputs/bundle/release/app-release.aab",
      skip_upload_apk: true,
      version_code: current_build_number,
      changes_not_sent_for_review: true, # TODO: to remove
      mapping_paths: [
        "app/build/outputs/mapping/release/mapping.txt",
        # "app/build/intermediates/merged_native_libs/release/mergeReleaseNativeLibs/out/native_debug_symbols.zip",
      ],
    )
  end
end
